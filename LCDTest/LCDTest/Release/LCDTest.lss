
LCDTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800200  00000250  000002c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000250  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000300  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e5       	ldi	r30, 0x50	; 80
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 30       	cpi	r26, 0x0C	; 12
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	98 d0       	rcall	.+304    	; 0x240 <main>
 110:	9d c0       	rjmp	.+314    	; 0x24c <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <toggle_e>:
 114:	16 9a       	sbi	0x02, 6	; 2
 116:	00 00       	nop
 118:	16 98       	cbi	0x02, 6	; 2
 11a:	08 95       	ret

0000011c <lcd_write>:
 11c:	1f 93       	push	r17
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	1f 92       	push	r1
 124:	cd b7       	in	r28, 0x3d	; 61
 126:	de b7       	in	r29, 0x3e	; 62
 128:	66 23       	and	r22, r22
 12a:	11 f0       	breq	.+4      	; 0x130 <lcd_write+0x14>
 12c:	14 9a       	sbi	0x02, 4	; 2
 12e:	01 c0       	rjmp	.+2      	; 0x132 <lcd_write+0x16>
 130:	14 98       	cbi	0x02, 4	; 2
 132:	15 98       	cbi	0x02, 5	; 2
 134:	91 b1       	in	r25, 0x01	; 1
 136:	9f 60       	ori	r25, 0x0F	; 15
 138:	91 b9       	out	0x01, r25	; 1
 13a:	92 b1       	in	r25, 0x02	; 2
 13c:	19 2f       	mov	r17, r25
 13e:	10 7f       	andi	r17, 0xF0	; 240
 140:	98 2f       	mov	r25, r24
 142:	92 95       	swap	r25
 144:	9f 70       	andi	r25, 0x0F	; 15
 146:	91 2b       	or	r25, r17
 148:	92 b9       	out	0x02, r25	; 2
 14a:	89 83       	std	Y+1, r24	; 0x01
 14c:	e3 df       	rcall	.-58     	; 0x114 <toggle_e>
 14e:	89 81       	ldd	r24, Y+1	; 0x01
 150:	8f 70       	andi	r24, 0x0F	; 15
 152:	81 2b       	or	r24, r17
 154:	82 b9       	out	0x02, r24	; 2
 156:	de df       	rcall	.-68     	; 0x114 <toggle_e>
 158:	1f 60       	ori	r17, 0x0F	; 15
 15a:	12 b9       	out	0x02, r17	; 2
 15c:	0f 90       	pop	r0
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	1f 91       	pop	r17
 164:	08 95       	ret

00000166 <lcd_read.constprop.0>:
 166:	14 98       	cbi	0x02, 4	; 2
 168:	15 9a       	sbi	0x02, 5	; 2
 16a:	81 b1       	in	r24, 0x01	; 1
 16c:	80 7f       	andi	r24, 0xF0	; 240
 16e:	81 b9       	out	0x01, r24	; 1
 170:	16 9a       	sbi	0x02, 6	; 2
 172:	00 00       	nop
 174:	90 b1       	in	r25, 0x00	; 0
 176:	16 98       	cbi	0x02, 6	; 2
 178:	00 00       	nop
 17a:	16 9a       	sbi	0x02, 6	; 2
 17c:	00 00       	nop
 17e:	20 b1       	in	r18, 0x00	; 0
 180:	2f 70       	andi	r18, 0x0F	; 15
 182:	89 2f       	mov	r24, r25
 184:	82 95       	swap	r24
 186:	80 7f       	andi	r24, 0xF0	; 240
 188:	16 98       	cbi	0x02, 6	; 2
 18a:	82 2b       	or	r24, r18
 18c:	08 95       	ret

0000018e <lcd_waitbusy>:
 18e:	eb df       	rcall	.-42     	; 0x166 <lcd_read.constprop.0>
 190:	87 fd       	sbrc	r24, 7
 192:	fd cf       	rjmp	.-6      	; 0x18e <lcd_waitbusy>
 194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_waitbusy+0x8>
 196:	00 c0       	rjmp	.+0      	; 0x198 <lcd_waitbusy+0xa>
 198:	e6 cf       	rjmp	.-52     	; 0x166 <lcd_read.constprop.0>

0000019a <lcd_command>:
 19a:	cf 93       	push	r28
 19c:	c8 2f       	mov	r28, r24
 19e:	f7 df       	rcall	.-18     	; 0x18e <lcd_waitbusy>
 1a0:	60 e0       	ldi	r22, 0x00	; 0
 1a2:	8c 2f       	mov	r24, r28
 1a4:	cf 91       	pop	r28
 1a6:	ba cf       	rjmp	.-140    	; 0x11c <lcd_write>

000001a8 <lcd_clrscr>:
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	f7 cf       	rjmp	.-18     	; 0x19a <lcd_command>

000001ac <lcd_putc>:
 1ac:	cf 93       	push	r28
 1ae:	c8 2f       	mov	r28, r24
 1b0:	ee df       	rcall	.-36     	; 0x18e <lcd_waitbusy>
 1b2:	ca 30       	cpi	r28, 0x0A	; 10
 1b4:	41 f4       	brne	.+16     	; 0x1c6 <lcd_putc+0x1a>
 1b6:	80 34       	cpi	r24, 0x40	; 64
 1b8:	10 f0       	brcs	.+4      	; 0x1be <lcd_putc+0x12>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	01 c0       	rjmp	.+2      	; 0x1c0 <lcd_putc+0x14>
 1be:	80 e4       	ldi	r24, 0x40	; 64
 1c0:	80 58       	subi	r24, 0x80	; 128
 1c2:	cf 91       	pop	r28
 1c4:	ea cf       	rjmp	.-44     	; 0x19a <lcd_command>
 1c6:	61 e0       	ldi	r22, 0x01	; 1
 1c8:	8c 2f       	mov	r24, r28
 1ca:	cf 91       	pop	r28
 1cc:	a7 cf       	rjmp	.-178    	; 0x11c <lcd_write>

000001ce <lcd_puts>:
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	ec 01       	movw	r28, r24
 1d4:	89 91       	ld	r24, Y+
 1d6:	88 23       	and	r24, r24
 1d8:	11 f0       	breq	.+4      	; 0x1de <lcd_puts+0x10>
 1da:	e8 df       	rcall	.-48     	; 0x1ac <lcd_putc>
 1dc:	fb cf       	rjmp	.-10     	; 0x1d4 <lcd_puts+0x6>
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	08 95       	ret

000001e4 <lcd_init>:
 1e4:	cf 93       	push	r28
 1e6:	c8 2f       	mov	r28, r24
 1e8:	91 b1       	in	r25, 0x01	; 1
 1ea:	9f 67       	ori	r25, 0x7F	; 127
 1ec:	91 b9       	out	0x01, r25	; 1
 1ee:	8f e9       	ldi	r24, 0x9F	; 159
 1f0:	9f e0       	ldi	r25, 0x0F	; 15
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <lcd_init+0xe>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <lcd_init+0x14>
 1f8:	00 00       	nop
 1fa:	11 9a       	sbi	0x02, 1	; 2
 1fc:	10 9a       	sbi	0x02, 0	; 2
 1fe:	8a df       	rcall	.-236    	; 0x114 <toggle_e>
 200:	81 ee       	ldi	r24, 0xE1	; 225
 202:	94 e0       	ldi	r25, 0x04	; 4
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <lcd_init+0x20>
 208:	00 c0       	rjmp	.+0      	; 0x20a <lcd_init+0x26>
 20a:	00 00       	nop
 20c:	83 df       	rcall	.-250    	; 0x114 <toggle_e>
 20e:	95 e1       	ldi	r25, 0x15	; 21
 210:	9a 95       	dec	r25
 212:	f1 f7       	brne	.-4      	; 0x210 <lcd_init+0x2c>
 214:	00 00       	nop
 216:	7e df       	rcall	.-260    	; 0x114 <toggle_e>
 218:	85 e1       	ldi	r24, 0x15	; 21
 21a:	8a 95       	dec	r24
 21c:	f1 f7       	brne	.-4      	; 0x21a <lcd_init+0x36>
 21e:	00 00       	nop
 220:	10 98       	cbi	0x02, 0	; 2
 222:	78 df       	rcall	.-272    	; 0x114 <toggle_e>
 224:	95 e1       	ldi	r25, 0x15	; 21
 226:	9a 95       	dec	r25
 228:	f1 f7       	brne	.-4      	; 0x226 <lcd_init+0x42>
 22a:	00 00       	nop
 22c:	88 e2       	ldi	r24, 0x28	; 40
 22e:	b5 df       	rcall	.-150    	; 0x19a <lcd_command>
 230:	88 e0       	ldi	r24, 0x08	; 8
 232:	b3 df       	rcall	.-154    	; 0x19a <lcd_command>
 234:	b9 df       	rcall	.-142    	; 0x1a8 <lcd_clrscr>
 236:	86 e0       	ldi	r24, 0x06	; 6
 238:	b0 df       	rcall	.-160    	; 0x19a <lcd_command>
 23a:	8c 2f       	mov	r24, r28
 23c:	cf 91       	pop	r28
 23e:	ad cf       	rjmp	.-166    	; 0x19a <lcd_command>

00000240 <main>:
 240:	8c e0       	ldi	r24, 0x0C	; 12
 242:	d0 df       	rcall	.-96     	; 0x1e4 <lcd_init>
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	92 e0       	ldi	r25, 0x02	; 2
 248:	c2 df       	rcall	.-124    	; 0x1ce <lcd_puts>
 24a:	ff cf       	rjmp	.-2      	; 0x24a <main+0xa>

0000024c <_exit>:
 24c:	f8 94       	cli

0000024e <__stop_program>:
 24e:	ff cf       	rjmp	.-2      	; 0x24e <__stop_program>
